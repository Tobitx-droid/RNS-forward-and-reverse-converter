----------------------------------------------------------------------------------
-- Company: 
-- Engineer: 
-- 
-- Create Date: 08/11/2023 10:57:43 AM
-- Design Name: 
-- Module Name: module2 - Behavioral
-- Project Name: 
-- Target Devices: 
-- Tool Versions: 
-- Description: 
-- 
-- Dependencies: 
-- 
-- Revision:
-- Revision 0.01 - File Created
-- Additional Comments:
-- 
----------------------------------------------------------------------------------


library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--use IEEE.NUMERIC_STD.ALL;

-- Uncomment the following library declaration if instantiating
-- any Xilinx leaf cells in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

entity module2 is
    Port (
        in0i,in0ii,in1i,in1ii,in2    : in std_logic;
        out0,out1,out2i,out2ii       : out std_logic
        
     );
end module2;

architecture Behavioral of module2 is

------component declaration-----
    component halfAdder is
        Port (
            A,B : in std_logic;
            sum : out std_logic;
            cout: out std_logic
         );
    end component;
    
    component fullAdder is
        Port (
            A,B,Cin : in std_logic;
            sum, carryOut: out std_logic
         );
    end component;
    
    
--------signal declarations----------
    signal carry0,carry1,carry2 : std_logic;
    

begin

-----port map----
    comp0: halfAdder port map(
        A    => in0i,
        B    => in0ii,
        sum  => out0,
        cout => carry0
        );
        
    comp1: fullAdder port map(
        A        => in1i, 
        B        => in1ii,  
        Cin      => carry0,
        sum      => out1,
        carryOut => carry1
        );
        
    --comp2: fullAdder port map(
    --    A    => carry1,
    --    B    => in2,
    --    Cin  => '1',
    --    sum  => out2i,
    --    carryOut => out2ii
    --    );     
     
    comp2: halfAdder port map(
        A    => carry1,
        B    => in2,
        sum  => out2i,
        cout => out2ii
        ); 
    
    

end Behavioral;
