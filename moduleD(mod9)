----------------------------------------------------------------------------------
-- Company: 
-- Engineer: 
-- 
-- Create Date: 08/16/2023 05:21:01 PM
-- Design Name: 
-- Module Name: moduleD - Behavioral
-- Project Name: 
-- Target Devices: 
-- Tool Versions: 
-- Description: 
-- 
-- Dependencies: 
-- 
-- Revision:
-- Revision 0.01 - File Created
-- Additional Comments:
-- 
----------------------------------------------------------------------------------


library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--use IEEE.NUMERIC_STD.ALL;

-- Uncomment the following library declaration if instantiating
-- any Xilinx leaf cells in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

entity moduleD is
    Port (
        Ai,Aii,B,C,Di,Dii,E : in std_logic;
        out1,out2,out3,out4,out5 : out std_logic
     );
end moduleD;

architecture Behavioral of moduleD is

------component declaration-------
    component halfAdder is
        Port (
            A,B : in std_logic;
            sum : out std_logic;
            cout: out std_logic
         );
    end component;
    
    component fullAdder is
        Port (
            A,B,Cin : in std_logic;
            sum, carryOut: out std_logic
         );
    end component; 

------signal declaration-------
    signal carry0,carry1,carry2,carry3: std_logic;
    signal gnd : std_logic := '0';
    
begin
-----port map----
    comp0: halfAdder port map(
        A     => Ai,
        B     => Aii, 
        sum   => out1,
        cout  => carry0
        );
        
    comp1: halfAdder port map(
        A     => B,
        B     => carry0, 
        sum   => out2,
        cout  => carry1
        );
        
    comp2: halfAdder port map(
        A     => C,
        B     => carry1, 
        sum   => out3,
        cout  => carry2
        );
        
    comp3: fullAdder port map(
        A         => Di,
        B         => Dii,
        Cin       => carry2, 
        sum       => out4,
        carryOut  => carry3
        );
        
    comp4: halfAdder port map(
        A     => E,
        B     => carry3, 
        sum   => out5,
        cout  => gnd
        );
        

end Behavioral;
