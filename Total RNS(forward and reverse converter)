----------------------------------------------------------------------------------
-- Company: 
-- Engineer: 
-- 
-- Create Date: 09/02/2023 11:58:19 PM
-- Design Name: 
-- Module Name: Total - Behavioral
-- Project Name: 
-- Target Devices: 
-- Tool Versions: 
-- Description: 
-- 
-- Dependencies: 
-- 
-- Revision:
-- Revision 0.01 - File Created
-- Additional Comments:
-- 
----------------------------------------------------------------------------------


library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--use IEEE.NUMERIC_STD.ALL;

-- Uncomment the following library declaration if instantiating
-- any Xilinx leaf cells in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

entity Total is
    Port (
        numberIn : in std_logic_vector(8 downto 0);
        numberOut: out std_logic_vector(8 downto 0)
        
     );
end Total;

architecture Behavioral of Total is
-----component declaration-----
    component newMod7 is
        Port (
            --INPUTS
            a_0,a_1,a_2 : in std_logic;
            b_0,b_1,b_2 : in std_logic;
            c_0,c_1,c_2 : in std_logic;
            
            --OUTPUTS
            out_0,out_1,out_2 : out std_logic
         );
    end component;
    
    component mod8converter is
        Port (
            numIn: in std_logic_vector(8 downto 0);
            numOut: out std_logic_vector(2 downto 0)
         );
    end component;
    
    component mod9converter is
        Port (
            a0,a1,a2 : in std_logic;
            b0,b1,b2 : in std_logic;
            c0,c1,c2 : in std_logic;

            out1,out2,out3,out4,out5 : out std_logic
         );
    end component;
    
    
    component reverse_converterII is
        Port (
            Roo,RoI,Ro2 : in std_logic;
            RmIo,RmII,RmI2: in std_logic;
            RpIo,RpII,RpI2,RpI3: in std_logic;
            n: out std_logic_vector(8 downto 0)
         );
    end component;
    --component backConverter is
    --    Port (
    --        Roo,RoI,Ro2 : in std_logic;
    --        RmIo,RmII,RmI2: in std_logic;
    --        RpIo,RpII,RpI2,RpI3: in std_logic;
    --        n: out std_logic_vector(8 downto 0)
    --     );
    --end component;
    
------signal declaration------
    --signal generalIn: std_logic_vector(8 downto 0);
    signal m0,m1,m2: std_logic;
    signal n0,n1,n2: std_logic;
    signal p0,p1,p2,p3: std_logic;
    signal gnd: std_logic := '0';
    


begin
-----port map-----

    mod7: newMod7 port map (
            a_0   => numberIn(0),
            a_1   => numberIn(1),
            a_2   => numberIn(2), 
            b_0   => numberIn(3),
            b_1   => numberIn(4),
            b_2   => numberIn(5), 
            c_0   => numberIn(6),
            c_1   => numberIn(7),
            c_2   => numberIn(8),
            out_0 => m0,
            out_1 => m1,
            out_2 => m2
         );
    
    mod8: mod8converter port map(
            numIn     => numberIn, 
            numOut(0) => n0,
            numOut(1) => n1,
            numOut(2) => n2
         );
         
    mod9: mod9converter port map(
            a0   => numberIn(0),
            a1   => numberIn(1),
            a2   => numberIn(2), 
            b0   => numberIn(3),
            b1   => numberIn(4),
            b2   => numberIn(5), 
            c0   => numberIn(6),
            c1   => numberIn(7),
            c2   => numberIn(8), 
            out1 => p0,
            out2 => p1,
            out3 => p2,
            out4 => p3,
            out5 => gnd
         );
    
    reverse: reverse_converterII port map(
            Roo  => n0,
            RoI  => n1,
            Ro2  => n2, 
            RmIo => m0,
            RmII => m1,
            RmI2 => m2,
            RpIo => p0,
            RpII => p1,
            RpI2 => p2,
            RpI3 => p3,
            n    => numberOut
         );
    
    
    
    


end Behavioral;
